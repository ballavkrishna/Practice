class Solution:
    def removeKdigits(self, num: str, k: int) -> str:
        #num=int(num)
        if len(num)==k:
            return("0")
        q=deque()
        q.append(int(num[0]))
        for i in range(1,len(num)):
            k1=num[i]
            // if dip found pop that element
            while len(q)>0  and int(k1)<q[-1]and k>0:
                q.pop()
                k-=1
            if len(q)==0 and int(k1)==0:
                 continue
            else:
                q.append(int(k1))
                
        //if stack is empty return 0
        if len(q)==0:
            return "0"
        if no dip found delete last k elemets  from stack
        while k>0:
            q.pop()
            k-=1
        s=""
        while len(q):
            s=s+str(q.pop())
        #s=s[::-1]
        
        
        return s[::-1] 
        
                     
