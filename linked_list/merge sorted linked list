
rescursive solution

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if (l1==NULL){return l2;}
        if (l2==NULL){return l1;}
        if (l1->val < l2->val){
            l1->next=mergeTwoLists(l1->next, l2);
            return l1;
        }
        else{
            l2->next=mergeTwoLists(l1, l2->next);
            return l2;
        }
    }
};

Iterative solutionn
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* p, ListNode* q) {
        ListNode *temp1=new ListNode(0);
        ListNode *temp=temp1;
        
        while(p && q){
            if (p->val < q->val){
                temp->next=p;
                temp=p;
                p=temp->next;
            }
            else{
                temp->next=q;
                temp=q;
                q=temp->next;
            }
        }
        if (p==NULL){
            temp->next=q;
        }
        if (q==NULL){
            temp->next=p;
        }
        return temp1->next;
    }
};
