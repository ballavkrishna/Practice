https://leetcode.com/problems/binary-tree-level-order-traversal/discuss/33550/Python-Solution-with-Detailed-Explanation
o(n) + O(n)
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrder(self, root: TreeNode) -> List[List[int]]:
        if root is None:
            return
        q=[]
        
        res=[]
        q.append(root)
        while(len(q)!=0):
            a=[]
            for i in range(len(q)):
                 
                 node=q.pop(0)
                 a.append(node.val)
            
                 if node.left!=None:
                   q.append(node.left)
                 
                 if node.right!=None:
                   q.append(node.right)
            res.append(a)
        return res
